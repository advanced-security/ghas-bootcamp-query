// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/dgrijalva/jwt-go, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/dgrijalva/jwt-go (exports: Token,SigningMethodHMAC; functions: ParseWithClaims,Parse)

// Package jwt is a stub of github.com/dgrijalva/jwt-go, generated by depstubber.
package jwt

import (
	crypto "crypto"
)

type Claims interface {
	Valid() error
}

type Keyfunc func(*Token) (interface{}, error)

func Parse(_ string, _ Keyfunc) (*Token, error) {
	return nil, nil
}

func ParseWithClaims(_ string, _ Claims, _ Keyfunc) (*Token, error) {
	return nil, nil
}

type SigningMethod interface {
	Alg() string
	Sign(_ string, _ interface{}) (string, error)
	Verify(_ string, _ string, _ interface{}) error
}

type SigningMethodHMAC struct {
	Name string
	Hash crypto.Hash
}

func (_ *SigningMethodHMAC) Alg() string {
	return ""
}

func (_ *SigningMethodHMAC) Sign(_ string, _ interface{}) (string, error) {
	return "", nil
}

func (_ *SigningMethodHMAC) Verify(_ string, _ string, _ interface{}) error {
	return nil
}

type Token struct {
	Raw       string
	Method    SigningMethod
	Header    map[string]interface{}
	Claims    Claims
	Signature string
	Valid     bool
}

func (_ *Token) SignedString(_ interface{}) (string, error) {
	return "", nil
}

func (_ *Token) SigningString() (string, error) {
	return "", nil
}
